type Pedido @model @auth(rules: [{allow: public}]) {
  id: ID!
  dt_pedido: AWSDateTime
  vr_subtotal: Float
  vr_taxaentrega: Float
  vr_total: Float
  status: Status
  token_sms: String
  Items: [Item] @hasMany(indexName: "byPedido", fields: ["id"])
  Delivery: Delivery @hasOne
  Courier: Courier @hasOne
  userID: ID! @index(name: "byUser")
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  nome: String
  sobrenome: String
  url_foto: String
  token: String
  latitude: Float
  longitude: Float
  endereco: String
  cidade: String
  UF: UF
  Carts: [Cart] @hasMany(indexName: "byUser", fields: ["id"])
  Pedidos: [Pedido] @hasMany(indexName: "byUser", fields: ["id"])
}

type Delivery @model @auth(rules: [{allow: public}]) {
  id: ID!
  nome: String
  plano_assinatura: Plano
  situacao: Situacao
  responsavel: String
  telefone: AWSPhone
  email: AWSEmail
  horario: String
  minDeliveryTime: Int
  maxDeliveryTime: Int
  rating: Float
  taxa_entrega: Float
  url_imagem: String
  latitude: Float
  longitude: Float
  endereco: String
  cidade: String
  UF: UF
  Produtos: [Produto] @manyToMany(relationName: "DeliveryProduto")
  Categorias: [Categoria] @manyToMany(relationName: "DeliveryCategoria")
  Carts: [Cart] @hasMany(indexName: "byDelivery", fields: ["id"])
}

type CartItem @model @auth(rules: [{allow: public}]) {
  id: ID!
  qtd: Int!
  cartID: ID! @index(name: "byCart")
}

type Cart @model @auth(rules: [{allow: public}]) {
  id: ID!
  CartItems: [CartItem!] @hasMany(indexName: "byCart", fields: ["id"])
  deliveryID: ID! @index(name: "byDelivery")
  userID: ID! @index(name: "byUser")
}

type Categoria @model @auth(rules: [{allow: public}]) {
  id: ID!
  descricao: String!
  url_imagem: AWSURL
  ordem: String
  deliverys: [Delivery] @manyToMany(relationName: "DeliveryCategoria")
}

enum Situacao {
  ATIVO
  INATIVO
}

enum Plano {
  FREE
  BASIC
  PRO
  PREMIUM
}

type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  qtd: Int
  vr_unitario: Float
  vr_total: Float
  pedidoID: ID! @index(name: "byPedido")
}

enum Status {
  NOVO
  AGUARDANDO
  PREPARANDO
  PRONTO_PARA_RETIRADA
  RETIRADO
  ENTREGUE
  FINALIZADO
  CANCELADO
}

type Produto @model @auth(rules: [{allow: public}]) {
  id: ID!
  nome: String!
  descricao: String
  vr_unitario: Float!
  url_imagem: AWSURL
  deliverys: [Delivery] @manyToMany(relationName: "DeliveryProduto")
}

enum Transporte {
  DRIVING
  BICYCLING
}

enum UF {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PE
  PI
  PR
  RJ
  RN
  RS
  RO
  RR
  SC
  SE
  SP
  TO
}

type Courier @model @auth(rules: [{allow: public}]) {
  id: ID!
  nome: String!
  cpf: String!
  telefone: AWSPhone!
  tipo_transporte: Transporte!
  url_foto: AWSURL
  token_sms: String!
  latitude: Float!
  longitude: Float!
  endereco: String
  cidade: String!
  uf: UF!
}
 